FIND_PACKAGE(SWIG REQUIRED)

INCLUDE(${SWIG_USE_FILE})
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})

SET(PROJECT_HEADERS
    GeomAPI.h
    GeomAPI_Circ2d.h
    GeomAPI_Interface.h
    GeomAPI_XY.h
    GeomAPI_XYZ.h
    GeomAPI_Pnt.h
    GeomAPI_Pnt2d.h
    GeomAPI_Lin.h
    GeomAPI_Lin2d.h
    GeomAPI_Dir.h
    GeomAPI_Pln.h
    GeomAPI_Shape.h
)

SET(PROJECT_SOURCES
    GeomAPI_Circ2d.cpp
    GeomAPI_Interface.cpp
    GeomAPI_XY.cpp
    GeomAPI_XYZ.cpp
    GeomAPI_Pnt.cpp
    GeomAPI_Pnt2d.cpp
    GeomAPI_Lin.cpp
    GeomAPI_Lin2d.cpp
    GeomAPI_Dir.cpp
    GeomAPI_Pln.cpp
    GeomAPI_Shape.cpp
)

ADD_DEFINITIONS(-DGEOMAPI_EXPORTS ${CAS_DEFINITIONS})
ADD_LIBRARY(GeomAPI SHARED ${PROJECT_SOURCES} ${PROJECT_HEADERS})

SET(CMAKE_SWIG_FLAGS "")

SET_SOURCE_FILES_PROPERTIES(GeomAPI.i PROPERTIES CPLUSPLUS ON)
SET_SOURCE_FILES_PROPERTIES(GeomAPI.i PROPERTIES SWIG_DEFINITIONS "-shadow")

INCLUDE_DIRECTORIES(
  ${CAS_INCLUDE_DIRS}
)

TARGET_LINK_LIBRARIES(GeomAPI ${PROJECT_LIBRARIES} ${CAS_KERNEL} ${CAS_MODELER})

SET(SWIG_SCRIPTS
  ${CMAKE_CURRENT_BINARY_DIR}/GeomAPI.py
)

SET(SWIG_LINK_LIBRARIES
  GeomAPI
  ${PYTHON_LIBRARIES}
)

SWIG_ADD_MODULE(GeomAPI python GeomAPI.i ${PROJECT_HEADERS})
SWIG_LINK_LIBRARIES(GeomAPI ${SWIG_LINK_LIBRARIES})

IF(WIN32)
  SET_TARGET_PROPERTIES(_GeomAPI PROPERTIES DEBUG_OUTPUT_NAME _GeomAPI_d)
ENDIF(WIN32)

INSTALL(TARGETS _GeomAPI DESTINATION swig)
INSTALL(TARGETS GeomAPI DESTINATION bin)
INSTALL(FILES ${SWIG_SCRIPTS} DESTINATION swig)
