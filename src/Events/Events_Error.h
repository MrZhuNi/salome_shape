// Copyright (C) 2014-20xx CEA/DEN, EDF R&D

/*
 * Events_Error.h
 *
 *  Created on: Apr 28, 2014
 *      Author: sbh
 */

#ifndef EVENTS_ERROR_H_
#define EVENTS_ERROR_H_

#include <Events.h>
#include <Events_Message.h>

#include <string>

/**\class Events_Error
 * \ingroup EventsLoop
 * \brief An error message event.
 *
 * Is generated by any algorithm or GUI of the application to inform the user about
 * the problem. In GUI mode all such errors are collected in the message log window.
 */
class Events_Error : public Events_Message
{
  std::string myDescription;  ///< the description of the error

public:
  /// default destructor   
  EVENTS_EXPORT virtual ~Events_Error();

  /// Identifier of this event (one for all errors)
  EVENTS_EXPORT static Events_ID errorID();
  /// Specific error string
  EVENTS_EXPORT const char* description() const;
  /// Allows to send an error quickly: it creates and sends the error object automatically
  EVENTS_EXPORT static void send(const std::string& theDescription, const void* theSender = 0);

  /// Throws a C++ exception about using an empty AIS object
  /// \param theDescription an exception information
  EVENTS_EXPORT static void throwException(const std::string& theDescription);

protected:
  /// Default constructor. Use "send" message for generation an error.
  EVENTS_EXPORT Events_Error(const std::string& theDescription, const void* theSender = 0);
};

#endif /* EVENTS_ERROR_H_ */
